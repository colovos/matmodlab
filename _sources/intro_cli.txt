
Matmodlab Command Line Tools
############################

.. contents:: Contents
   :local:
   :depth: 1

Overview
========

Matmodlab includes a group of command line tools for interacting with Matmodlab.

Command Line Tools
==================

The mml Command Line Interface
------------------------------

mml build
~~~~~~~~~

``mml build`` builds fortran utilities

mml clean
~~~~~~~~~

``mml clean`` cleans files generated by Matmodlab

mml config
~~~~~~~~~~

``mml config`` configures user definable options to Matmodlab. See
:ref:`user_config`.

mml run
~~~~~~~

``mml run`` runs simulation input files

mml test
~~~~~~~~

``mml test`` runs the testing utility

mml view
~~~~~~~~

``mml view`` launches the results file viewer


.. _exodiff:

exodiff
-------

Compare ExodusII database files::

  usage: exodiff [-h] [-f F] [--interp] source1 source2

  positional arguments:
    source1
    source2

  optional arguments:
    -h, --help  show this help message and exit
    -f F        Use the given file to specify the variables to be considered and
                to what tolerances [default: None].
    --interp    Interpolate variabes through time to compute error [default:
                False].

Exodiff Tolerance File
~~~~~~~~~~~~~~~~~~~~~~

By default, ``exodiff`` compares all common variables in database files
``source1`` and ``source2`` and uses standard tolerances to determine if the
files are the same. Optionally, a "diff" file can be sent to ``exodiff`` (the
``-f``) to fine tune variables to be compared and tolerances. The diff file is
an xml file whose root element must be ``ExDiff``. The only recognized child
of ``ExDiff`` is ``Variable``. If a diff file is specified, only those
variables specified are compared.

Both ``ExDiff`` and ``Variable`` may define ``ftol`` and ``dtol`` attributes
to specify failure and differencing tolerances. Tolerances defined in
``ExDiff`` apply to all variables. Tolerances defined by a ``Variable`` apply
only to that variable (regardless of tolerances defined in ``ExDiff``).

``Variable`` must define the ``name`` attribute to specify the name of the
variable in the database file.

Example
.......

Consider the following diff file::

  cat exodiff_spec.xml

  <ExDiff ftol="1e-6" dtol="1e-8">
    <Variable name="STRAIN_XX" ftol="1.e-4" dtol="1.e-6"/>
    <Variable name="STRAIN_YY" ftol="1.e-4" dtol="1.e-6"/>
    <Variable name="STRAIN_ZZ" ftol="1.e-4" dtol="1.e-6"/>
    <Variable name="STRESS_XX"/>
    <Variable name="STRESS_YY"/>
    <Variable name="STRESS_ZZ"/>
    <Variable name="PRESSURE" ftol="1.e-1" dtol="5.e-2"/>
  </ExDiff>

exodump
-------

Dump information from ExodusII database::

  usage: exodump [-h] [-o O] [--list] [--ffmt FFMT]
                 [--ofmt {mathematica,ascii,ndarray}] [--step STEP]
                 [--block BLOCK] [--element ELEMENT]
                 source [variables [variables ...]]

  positional arguments:
    source
    variables             Variables to dump [default: ALL]

  optional arguments:
    -h, --help            show this help message and exit
    -o O                  Output file name [default: basename(source).out]
    --list                List variable names and exit
    --ffmt FFMT           Output floating point format [default: .18f]
    --ofmt {mathematica,ascii,ndarray}
                          Output format [default: ascii]
    --step STEP           Step [default: 1]
    --block BLOCK         Block number [default: 1]
    --element ELEMENT     Element number [default: 1]
